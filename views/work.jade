extends layout

block content
  #gb-kitchen-sink.project
    section.work
      h1 Goodybag Kitchen Sink
      ul.list-tags
        li.list-tag-item LESS
        li.list-tag-item HTML
        li.list-tag-item Handlebars
      p The first iteration of Goodybag built stylesheets on top of Bootstrap but 
        | this ended up being rather unwieldy and overly verbose for our needs.
        | We suffered problems with conflicting styles and not reusing 
        | components. To fix this, we decided to rebuild our styling framework
        | for new pages.
      p I created the first internal components for Goodybag's living style guide
        | called the Kitchen Sink. The components include explanations, 
        | demos and embeddable code samples. The kitchen sink became an 
        | essential part of our front-end development flow and made 
        | prototyping much easier.
    section.work.work-imgs
      img(src="images/ks.png", data-action="zoom")
      img(src="images/ks2.png", data-action="zoom")
      img(src="images/ks3.png", data-action="zoom")
      img(src="images/ks4.png", data-action="zoom")
  #discoteca.project
    section.work
      h1 Discoteca
      ul.list-tags
        li.list-tag-item Node.js
        li.list-tag-item socket.io
        li.list-tag-item jQuery
        li.list-tag-item LESS
      p At Goodybag, we installed some speakers around
        | the office for ambient music. First, we hooked up the speakers to
        | someone's laptop and played one of their playlists. As you can imagine,
        | this got old quickly!
      p I decided to democratize our music and built Discoteca
        | which allows users to search and queue tracks. 
        | The playlist gets updated in real-time and 
        | shows album art as well as track information.
      p
        a.arrow(href="https://github.com/prestonp/discoteca") Source
          i.fa.fa-caret-right
    section.work.work-imgs
      img(src="images/disco.png", data-action="zoom")
      img(src="images/disco2.png", data-action="zoom")
  #dataclips.project
    section.work
      h1 Dataclips
      ul.list-tags
        li.list-tag-item Node.js
        li.list-tag-item Postgres
        li.list-tag-item Backbone
        li.list-tag-item LESS
      p Dataclips is like a sql pastebin that creates public,
        | anonymized links to query results in a neatly
        | formatted table.
      p The current implementation supports Postgres servers
        | and versioning your data clips. The next steps will
        | be adding integrations so that you can create dataclips
        | through IDEs and chat services like Slack and Hipchat.
    section.work.work-imgs
      img(src="images/dc.png", data-action="zoom")
      img(src="images/dc2.png", data-action="zoom")

  .project
    section.work.work-full
      h1 Other projects I've worked on
      ul.list-other
        li
          a(href="https://github.com/prestonp/knobs") knobs 
          | — A feature toggles library
        li 
          a(href="https://github.com/prestonp/potato-load") potato-load 
          | — A plugin to lazy load images
        li 
          a(href="https://github.com/prestonp/title-marquee") title-marquee 
          | — JS plugin to scroll text in your page title
        li 
          a(href="https://github.com/prestonp/simple-rcon") simple-rcon 
          | — A client lib in Node.js for Source Servers via RCON protocol
        li
          a(href="https://github.com/prestonp/mal") mal 
          | — A clojure inspired lisp implemented in JavaScript. Written from
          | scratch step-by-step according to the lovely 
          a(href="https://github.com/kanaka/mal") mal project
        li
          a(href="https://github.com/prestonp/zen") zen 
          | — A markdown pastebin
        li
          a(href="https://github.com/prestonp/drawwww") drawwwww 
          | — A canvas based web app for drawing and saving doodles
